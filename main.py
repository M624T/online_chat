import asyncio

from pywebio import start_server
from pywebio.input import *
from pywebio.output import *
from pywebio.session import defer_call, info as session_info, run_async

MAX_MESSAGES_CNT = 10 ** 4

chat_msgs = []  # Chatdagi xabarlar tarixi. Har bir element (ism, xabar matni)
online_users = set()  # Onlayn foydalanuvchilar to'plami


def t(uzb, rus, eng):
    """Foydalanuvchi brauzeri tiliga qarab o'zbek, rus yoki ingliz tilidagi matnni qaytaradi"""
    if 'ru' in session_info.user_language:
        return rus
    elif 'uz' in session_info.user_language:
        return uzb
    else:
        return eng


async def refresh_msg(my_name):
    """Joriy sessiyaga yangi xabarlarni yuborish"""
    global chat_msgs
    last_idx = len(chat_msgs)
    while True:
        await asyncio.sleep(0.5)
        for m in chat_msgs[last_idx:]:
            if m[0] != my_name:  # Faqat boshqa foydalanuvchilar yuborgan xabarlarni yangilash
                put_markdown('`%s`: %s' % m, sanitize=True, scope='msg-box')

        # Eski xabarlarni o'chirish
        if len(chat_msgs) > MAX_MESSAGES_CNT:
            chat_msgs = chat_msgs[len(chat_msgs) // 2:]

        last_idx = len(chat_msgs)


async def main():
    """PyWebIO chat xonasi

    Bu yerda hozir onlayn bo'lganlar bilan chat qilishingiz mumkin.
    """
    global chat_msgs

    put_markdown(t("## PyWebIO chat xonasi\nChatga xush kelibsiz! Siz bu yerda hozir onlayn bo'lgan barcha odamlar bilan suhbatlashishingiz mumkin. Ushbu sahifani brauzeringizning bir nechta oynalarida ochib, ko'p foydalanuvchi muhitini sinab ko'rishingiz mumkin. Bu dastur 100 ta kod satridan kamroq yozilgan, kod manbasi [bu yerda](https://github.com/wang0618/PyWebIO/blob/dev/demos/chat_room.py)",
                   "## PyWebIO —á–∞—Ç\n–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —á–∞—Ç! –í—ã –º–æ–∂–µ—Ç–µ –æ–±—â–∞—Ç—å—Å—è —Å–æ –≤—Å–µ–º–∏, –∫—Ç–æ —Å–µ–π—á–∞—Å –æ–Ω–ª–∞–π–Ω. –í—ã –º–æ–∂–µ—Ç–µ –æ—Ç–∫—Ä—ã—Ç—å —ç—Ç—É —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –≤–∫–ª–∞–¥–∫–∞—Ö –±—Ä–∞—É–∑–µ—Ä–∞, —á—Ç–æ–±—ã –∏–º–∏—Ç–∏—Ä–æ–≤–∞—Ç—å –º–Ω–æ–≥–æ–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫—É—é —Å—Ä–µ–¥—É. –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞–ø–∏—Å–∞–Ω–æ –º–µ–Ω–µ–µ —á–µ–º –Ω–∞ 100 —Å—Ç—Ä–æ–∫–∞—Ö –∫–æ–¥–∞, –∏—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥ –¥–æ—Å—Ç—É–ø–µ–Ω [–∑–¥–µ—Å—å](https://github.com/wang0618/PyWebIO/blob/dev/demos/chat_room.py)",
                   "## PyWebIO chat room\nWelcome to the chat room, you can chat with all the people currently online. You can open this page in multiple tabs of your browser to simulate a multi-user environment. This application uses less than 100 lines of code, the source code is [here](https://github.com/wang0618/PyWebIO/blob/dev/demos/chat_room.py)"))

    put_scrollable(put_scope('msg-box'), height=300, keep_bottom=True)
    nickname = await input(t("Ismingiz", "–í–∞—à–µ –∏–º—è", "Your nickname"), required=True, validate=lambda n: t('Bu ism allaqachon ishlatilgan', '–≠—Ç–æ –∏–º—è —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è', 'This name is already been used') if n in online_users or n == 'üì¢' else None)

    online_users.add(nickname)

    # Sessiya ochilishidan oldin xabarni olish uchun qo'shilgan qism
    leave_message = t('`%s` chatni tark etdi. Hozir %s foydalanuvchi onlayn' % (nickname, len(online_users)),
                      '`%s` –ø–æ–∫–∏–Ω—É–ª —á–∞—Ç. –°–µ–π—á–∞—Å –æ–Ω–ª–∞–π–Ω %s –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π' % (nickname, len(online_users)),
                      '`%s` leaves the room. %s users currently online' % (nickname, len(online_users)))

    chat_msgs.append(('üì¢', t('`%s` chatga qo\'shildi. Hozir %s foydalanuvchi onlayn' % (nickname, len(online_users)),
                              '`%s` –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ —á–∞—Ç—É. –°–µ–π—á–∞—Å –æ–Ω–ª–∞–π–Ω %s –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π' % (nickname, len(online_users)),
                              '`%s` joins the room. %s users currently online' % (nickname, len(online_users)))))
    put_markdown(t('`üì¢`: `%s` chatga qo\'shildi. Hozir %s foydalanuvchi onlayn' % (nickname, len(online_users)),
                  '`üì¢`: `%s` –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ —á–∞—Ç—É. –°–µ–π—á–∞—Å –æ–Ω–ª–∞–π–Ω %s –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π' % (nickname, len(online_users)),
                  '`üì¢`: `%s` joins the room. %s users currently online' % (nickname, len(online_users))), sanitize=True, scope='msg-box')

    @defer_call
    def on_close():
        online_users.remove(nickname)
        chat_msgs.append(('üì¢', leave_message))  # Faqat oldindan saqlangan xabarni qo'shish

    refresh_task = run_async(refresh_msg(nickname))

    while True:
        data = await input_group(t('Xabar yuboring', '–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ', 'Send message'), [
            input(name='msg', help_text=t('Xabar matni Markdown sintaksisini qo\'llab-quvvatlaydi', '–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Å–∏–Ω—Ç–∞–∫—Å–∏—Å Markdown', 'Message content supports inline Markdown syntax')),
            actions(name='cmd', buttons=[t('Yuborish', '–û—Ç–ø—Ä–∞–≤–∏—Ç—å', 'Send'), t('Ko\'p qatorli kiritish', '–ú–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω—ã–π –≤–≤–æ–¥', 'Multiline Input'), {'label': t('Chiqish', '–í—ã—Ö–æ–¥', 'Exit'), 'type': 'cancel'}])
        ], validate=lambda d: ('msg', t('Xabar matni bo\'sh bo\'lmasligi kerak', '–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø—É—Å—Ç—ã–º', 'Message content cannot be empty')) if d['cmd'] == t('Yuborish', '–û—Ç–ø—Ä–∞–≤–∏—Ç—å', 'Send') and not d['msg'] else None)

        if data is None:
            break
        if data['cmd'] == t('Ko\'p qatorli kiritish', '–ú–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω—ã–π –≤–≤–æ–¥', 'Multiline Input'):
            data['msg'] = '\n' + await textarea(t('Xabar matni', '–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è', 'Message content'), help_text=t('Xabar matni Markdown sintaksisini qo\'llab-quvvatlaydi', '–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Å–∏–Ω—Ç–∞–∫—Å–∏—Å Markdown', 'Message content supports Markdown syntax'))
        
        put_markdown('`%s`: %s' % (nickname, data['msg']), sanitize=True, scope='msg-box')
        chat_msgs.append((nickname, data['msg']))

    refresh_task.close()
    toast(t("Siz chatdan chiqdiz!", "–í—ã –≤—ã—à–ª–∏ –∏–∑ —á–∞—Ç–∞", "You have left the chat room"))


if __name__ == '__main__':
    start_server(main, debug=True, port=8080)
